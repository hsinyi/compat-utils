# This workflow uses actions that are not certified by GitHub.
# They are provided by a third-party and are governed by
# separate terms of service, privacy policy, and support
# documentation.

# This workflow will install Deno then run Deno lint and test.
# For more information see: https://github.com/denoland/setup-deno

name: Deno

on:
  schedule:
    - cron: "0 0/12 * * *"
  
  workflow_dispatch:
  # push:
  #   branches:
  #     - main

permissions:
  contents: write

jobs:
  test:
    runs-on: ubuntu-latest

    steps:
      - name: Setup repo
        uses: actions/checkout@v3

      - name: Setup Deno
        uses: denoland/setup-deno@v1
        with:
          deno-version: v1.39.4

      - name: Run script
        env:
          GH_TOKEN: ${{ secrets.GH_TOKEN }}
        run: GH_TOKEN=$GH_TOKEN deno run -A write-all.js

      # - name: Create sqlite
      #   run: ./create-sqlite.sh

      - name: Commit report
        run: |
          if [ -n "$(git status --porcelain)" ]; then
           git config --global user.name 'Action Committer'
           git config --global user.email 'github-actions[bot]@users.noreply.github.com'
           git add -A
           git commit -m "Action: update data"
           git push
          fi

      # - name: Sync upstream
      #   env:
      #     AIRTABLE_API_KEY: ${{ secrets.AIRTABLE_API_KEY }}
      #     AIRTABLE_BASE_ID: ${{ secrets.AIRTABLE_BASE_ID }}
      #     AIRTABLE_TABLE_ID: ${{ secrets.AIRTABLE_TABLE_ID }}
      #     AIRTABLE_UNIQUE_FIELD_NAME: ${{ secrets.AIRTABLE_UNIQUE_FIELD_NAME }}
      #     AIRTABLE_API_MS_TO_SLEEP: ${{ secrets.AIRTABLE_API_MS_TO_SLEEP }}
      #   run: AIRTABLE_API_KEY=$AIRTABLE_API_KEY AIRTABLE_BASE_ID=$AIRTABLE_BASE_ID AIRTABLE_TABLE_ID=$AIRTABLE_TABLE_ID AIRTABLE_UNIQUE_FIELD_NAME=$AIRTABLE_UNIQUE_FIELD_NAME AIRTABLE_API_MS_TO_SLEEP=$AIRTABLE_API_MS_TO_SLEEP deno run -A upstream-sync.js
